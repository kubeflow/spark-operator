/*
Copyright 2025 The Kubeflow authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	apiv1beta2 "github.com/kubeflow/spark-operator/v2/api/v1beta2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SparkApplicationLister helps list SparkApplications.
// All objects returned here must be treated as read-only.
type SparkApplicationLister interface {
	// List lists all SparkApplications in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1beta2.SparkApplication, err error)
	// SparkApplications returns an object that can list and get SparkApplications.
	SparkApplications(namespace string) SparkApplicationNamespaceLister
	SparkApplicationListerExpansion
}

// sparkApplicationLister implements the SparkApplicationLister interface.
type sparkApplicationLister struct {
	listers.ResourceIndexer[*apiv1beta2.SparkApplication]
}

// NewSparkApplicationLister returns a new SparkApplicationLister.
func NewSparkApplicationLister(indexer cache.Indexer) SparkApplicationLister {
	return &sparkApplicationLister{listers.New[*apiv1beta2.SparkApplication](indexer, apiv1beta2.Resource("sparkapplication"))}
}

// SparkApplications returns an object that can list and get SparkApplications.
func (s *sparkApplicationLister) SparkApplications(namespace string) SparkApplicationNamespaceLister {
	return sparkApplicationNamespaceLister{listers.NewNamespaced[*apiv1beta2.SparkApplication](s.ResourceIndexer, namespace)}
}

// SparkApplicationNamespaceLister helps list and get SparkApplications.
// All objects returned here must be treated as read-only.
type SparkApplicationNamespaceLister interface {
	// List lists all SparkApplications in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1beta2.SparkApplication, err error)
	// Get retrieves the SparkApplication from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1beta2.SparkApplication, error)
	SparkApplicationNamespaceListerExpansion
}

// sparkApplicationNamespaceLister implements the SparkApplicationNamespaceLister
// interface.
type sparkApplicationNamespaceLister struct {
	listers.ResourceIndexer[*apiv1beta2.SparkApplication]
}
